% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standardized_data_api.R
\docType{class}
\name{StandardizedDataApi}
\alias{StandardizedDataApi}
\title{StandardizedData operations}
\format{
An \code{R6Class} generator object
}
\description{
StandardizedDataApi
}
\details{
Calcbench API

No description provided (generated by Openapi Generator https://github.com/calcbenchRtools/calcbenchR-generator)

The version of the OpenAPI document: v1
Generated by: https://calcbenchR-generator.tech
}
\section{Methods}{

\describe{
\strong{ StandardizedDataMappedData } \emph{  }

\itemize{
\item \emph{ @param } search_parameters \link{MappedDataSearchParameters}
\item \emph{ @returnType } list( \link{MappedDataPoint} ) \cr

\item status code : 200 | OK

\item return type : array\link{MappedDataPoint}
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  StandardizedDataMappedData  ####################

library(calcbenchR)
var_search_parameters <- MappedDataSearchParameters$new(StandardizedQueryParameters$new("pointInTime_example", "pointInTimeV2_example", "allFootnotes_example", "allFace_example", "includeXBRL_example", "includePreliminary_example", "allNonGAAP_example", "allMetrics_example", "excludeUnconfirmedPreliminary_example", c("metrics_example"), "includeTrace_example", "excludeErrors_example"), PeriodParameters$new(123, "unset", 123, "unset", "periodType_example", "useFiscalPeriod_example", DateRange$new("startDate_example", "endDate_example"), "allHistory_example", "updateDate_example", "updatedFrom_example", "asOriginallyReported_example", 123, 123), CompaniesParameters$new(c("companyIdentifiers_example"), "entireUniverse_example", c(123))) # MappedDataSearchParameters |

api_instance <- StandardizedDataApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$StandardizedDataMappedData(var_search_parametersdata_file = "result.txt")
result <- api_instance$StandardizedDataMappedData(var_search_parameters)
dput(result)
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-StandardizedDataApi-new}{\code{StandardizedDataApi$new()}}
\item \href{#method-StandardizedDataApi-StandardizedDataMappedData}{\code{StandardizedDataApi$StandardizedDataMappedData()}}
\item \href{#method-StandardizedDataApi-StandardizedDataMappedDataWithHttpInfo}{\code{StandardizedDataApi$StandardizedDataMappedDataWithHttpInfo()}}
\item \href{#method-StandardizedDataApi-clone}{\code{StandardizedDataApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StandardizedDataApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-StandardizedDataApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new StandardizedDataApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StandardizedDataApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StandardizedDataApi-StandardizedDataMappedData"></a>}}
\if{latex}{\out{\hypertarget{method-StandardizedDataApi-StandardizedDataMappedData}{}}}
\subsection{Method \code{StandardizedDataMappedData()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StandardizedDataApi$StandardizedDataMappedData(
  search_parameters,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
array\link{MappedDataPoint}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StandardizedDataApi-StandardizedDataMappedDataWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-StandardizedDataApi-StandardizedDataMappedDataWithHttpInfo}{}}}
\subsection{Method \code{StandardizedDataMappedDataWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StandardizedDataApi$StandardizedDataMappedDataWithHttpInfo(
  search_parameters,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (array\link{MappedDataPoint}) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StandardizedDataApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-StandardizedDataApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StandardizedDataApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
